
//
//	Frontier / Grid
//



/*
 *	Grid: Container
 *	--------------------------------------------------
 */

%container {
	width: cols( $TOTAL_COLUMNS ) + $GUTTER;
	&.-half { width: cols( $TOTAL_COLUMNS/2 ) + $GUTTER; }
	&.-narrow { width: cols( $TOTAL_COLUMNS - 2 ) + $GUTTER; }
	&.-span-full { width: 100%; max-width: 100%; }
}

@mixin container() {
	@extend %container;
	max-width: 85vw; 
	margin-left: auto; margin-right: auto;
	position: relative;
	@include clearfix;
}

.container {
	@include container; 
	z-index: 10;
}



/*
 *	Grid: Structure
 *	--------------------------------------------------
 */

	.row {
		margin-bottom: lines(1);
		position: relative;
		@include clearfix;

		//	Layout	 --------------------

		&.-margin-none {
			margin-bottom: 0;
		}

		&.-margin-2 {
			margin-bottom: lines(2);
		}

		&.-flex {
			display: flex;
		}
	}
		.col {

			//	Default Column	 ------------

			width: percentage( 1/4 ); max-width: 100%;
			padding: 0 $GUTTER/2;
			float: left;
			box-sizing: border-box;

			.cols-fixed & {
				@include width(3);
			}

			//	Column Sizes	 ------------
			
			&.-small {
				width: percentage( 1/5 );
				.cols-fixed & { @include width(2); }
			}
			&.-third {
				width: percentage( 1/3 );
				.cols-fixed & { @include width(4); }
			}
			&.-half {
				width: percentage( 1/2 );
				.cols-fixed & { @include width(6); }
			}
			&.-twothirds {
				width: percentage( 2/3 );
				.cols-fixed & { @include width(8); }
			}
			&.-wide {
				width: percentage( 3/4 );
				.cols-fixed & { @include width(9); }
			}
			&.-full {
				width: percentage( 1 );
				.cols-fixed & { @include width($TOTAL_COLUMNS); }
			}

			//	Positions	 ----------------

			&.-right {
				float: right;
			}
			&.-left {
				float: left;
			}
			&.-center {
				margin: 0 auto;
				float: none;
			}
			
			//	Layout	 --------------------

			&.-margin-none {
				margin-bottom: 0;
			}

			//	Modifiers	 ----------------

			&.col--flush {
				padding: 0 em(1) em(1) 0;
			}
			&.col--flex {
				display: flex;
				flex-direction: column;
				flex-wrap: wrap;

				.col {
					float: none;
				}
			}

			//	Nested Styles	 ------------

			.row {
				margin: 0 $GUTTER / -2;
			}

			//	States	 --------------------

		}


.-spacer-1 {
	margin-bottom: lines(1);
}
.-spacer-2 {
	margin-bottom: lines(2);
}


/*
 * 	Media Queries
 *	--------------------------------------------------
 *
 *	- Breakpoints
 *
 *	large-desktop	1920 +
 *	med-desktop 	1680 +
 *	desktop 		1366 +
 *	DEFAULT 		1025 > 1365
 *	tablet-wide		- 1024
 *	tablet			- 768
 *	smartphone-wide	- 640
 *	smartphone		- 480
 *	mobile			- 320
 */



/*
 *	Breakpoint:	desktop
 *	--------------------------------------------------
 */

@include breakpoint(desktop) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER;
		&.-half { width: cols( $TOTAL_COLUMNS/2 ) + $GUTTER; }
	}

	.col, .cols-fixed .col {
		
		&.-half-desktop {
			width: percentage( 1/2 );
		}
	}
}

/*
 *	Breakpoint:	med-desktop
 *	--------------------------------------------------
 */

@include breakpoint(med-desktop) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER;
		&.-half { width: cols( $TOTAL_COLUMNS/2 ) + $GUTTER; }
	}
}


/*
 *	Breakpoint:	large-desktop
 *	--------------------------------------------------
 */

@include breakpoint(large-desktop) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER;
		&.-half { width: cols( $TOTAL_COLUMNS/2 ) + $GUTTER; }
	}
}


/*
 *	Breakpoint:	tablet-wide
 *	--------------------------------------------------
 */

@include breakpoint(tablet-wide) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER;
		&.-half { width: cols( $TOTAL_COLUMNS/2 ) + $GUTTER; }
	}

	.col, .cols-fixed .col {
		
		
		&.-half-tablet {
			width: percentage( 1/2 );
		}
		&.-twothirds-tablet {
			width: percentage( 2/3 );
		}
		&.-wide-tablet {
			width: percentage( 3/4 );
		}
		&.-full-tablet {
			width: percentage( 1 );
		}

	}
}


/*
 *	Breakpoint:	tablet
 *	--------------------------------------------------
 */

@include breakpoint(tablet) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER; max-width: 90vw;
		&.-half { width: cols( $TOTAL_COLUMNS/2 ) + $GUTTER; }
	}

	.col, .cols-fixed .col {
	
		&.-wide {
			width: percentage( 1 ); max-width: 100%;
		}
	}

}


/*
 *	Breakpoint:	smartphone-wide
 *	--------------------------------------------------
 */

@include breakpoint(smartphone-wide) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER; max-width: 100vw; 
		&.-half { width: cols( $TOTAL_COLUMNS ) + $GUTTER; }
	}
	
	.col, .cols-fixed .col {

		//	Default Column	 ------------

		width: percentage( 1 ); max-width: 100%;


		//	Column Sizes	 ------------

		&.-small, 
		&.-quarter,
		&.-third,
		&.-half,
		&.-twothirds,
		&.-wide,
		&.-wide-tablet,
		&.-full {
			width: percentage( 1 );
		}
	}

}


/*
 *	Breakpoint:	smartphone
 *	--------------------------------------------------
 */

@include breakpoint(smartphone) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER;
		&.-half { width: cols( $TOTAL_COLUMNS ) + $GUTTER; }
	}
}


/*
 *	Breakpoint:	mobile
 *	--------------------------------------------------
 */

@include breakpoint(mobile) {

	%container {
		width: cols( $TOTAL_COLUMNS ) + $GUTTER;
		&.-half { width: cols( $TOTAL_COLUMNS ) + $GUTTER; }
	}

}